@using WebApplication.Areas.Admin.ViewModels
@using System.Globalization
@using BLL.App.DTO
@model TrainingWeekIndexViewModel

@{
    ViewData["Title"] = "Training weeks";
}
<div class="jumbotron shadow rounded">
    <h1 class="text-uppercase">@Model.WorkoutRoutineName</h1>
    <p>
        <a class="text-uppercase" asp-area="Admin" asp-controller="WorkoutRoutines" asp-action="Index">Back</a>
    </p>
<hr/>
<div>
    <h3 class="text-left my-1 mx-1 text-uppercase">TRAINING WEEKS</h3>
    <div class="row text-left mx-1">
        <partial name="_CreatePartial" model="GetCreateViewModel()"/>
    </div>
</div>
<hr/>
@if (!Model.TrainingWeeks.Any())
{
    <p>No training weeks added yet!</p>
}
<div class="row d-flex justify-content-center">
    @foreach (var item in Model.TrainingWeeks)
    {
        <div class="card shadow rounded mb-3 mx-1 col-sm-12 col-md-10 col-xl-10">
            <div class="card-body">
                @if (item.IsDeload)
                {
                    <h5 class="text-uppercase text-dark">Deload week</h5>
                }
                <h4 class="card-title">Training week @item.WeekNumber</h4>
                <hr/>
                <div class="row d-flex justify-content-center">
                @if (item.TrainingDays == null || !item.TrainingDays.Any())
                {
                    <p class="text-secondary">No training days added yet!</p>
                }
                else
                {
                    @foreach (var day in item.TrainingDays.OrderBy(day => day.Date))
                    {
                <div class="m-1">
                    <table class="table table-sm table-bordered border-thick">
                        <thead>
                        <tr>
                            <th>
                                <p>@CultureInfo.CurrentUICulture.DateTimeFormat.GetDayName(day.Date.DayOfWeek)</p>
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @if (day.ExercisesInTrainingDay == null || !day.ExercisesInTrainingDay.Any())
                        {
                            <tr>
                                <td>
                                    <p class="text-secondary">No exercises added yet!</p>
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var exerciseInTrainingDay in day.ExercisesInTrainingDay)
                            {
                                <tr>
                                    <td>
                                    <p title="@exerciseInTrainingDay.Exercise?.Description" class="font-weight-bold text-left m-0 border-bottom">@exerciseInTrainingDay.Exercise?.Name</p>
                                        <ul>
                                        @if (exerciseInTrainingDay.ExerciseSets == null || !exerciseInTrainingDay.ExerciseSets.Any())
                                        {
                                            <p class="text-muted mr-2 mt-2">No sets added yet!</p>
                                        }
                                        else
                                        {
                                            @foreach (var set in exerciseInTrainingDay.ExerciseSets)
                                            {
                                                <li>
                                                    <span>@set.NrOfReps x @set.Weight %</span>
                                                </li>
                                            }
                                        }
                                    </ul>
                                    </td>
                                </tr>
                            }
                        }
                        <tr>
                            <td>
                                <a class="btn btn-outline-info text-uppercase" asp-area="Admin" asp-controller="TrainingDays" asp-action="View" asp-route-id="@day.Id">
                                    Edit
                                </a>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
                    }
                }
                <a asp-area="Admin" asp-controller="TrainingDays" asp-action="Create" asp-route-id="@item.Id">
                    <span class="text-success"><i class="fas fa-plus ml-2"></i> Add</span>
                </a>
                </div>
                <div class="move-items">
                    <partial name="_MoveWeekUpPartial" model="@GetWeekNumberEditViewModel(item)"/>
                    <partial name="_MoveWeekDownPartial" model="@GetWeekNumberEditViewModel(item)"/>
                </div>
                <div class="view-edit-delete">
                    <span>
                        <partial name="_EditDeloadPartial" model="@GetIsDeloadEditViewModel(item)"/>
                        <partial name="_DeletePartial" model="@GetDeleteViewModel(item)"/>
                    </span>
                </div>
            </div>
        </div>
    }
    </div>
</div>
@functions
{
    public TrainingWeekCreateViewModel GetCreateViewModel()
    {
        return new TrainingWeekCreateViewModel()
        {
            WorkoutRoutineId = new Guid(ViewContext.RouteData.Values["id"].ToString()!)
        };
    }
    
    public TrainingWeekViewModel GetDeleteViewModel(TrainingWeek trainingWeek)
    {
        return new TrainingWeekViewModel()
        {
            TrainingWeek = trainingWeek,
            WorkoutRoutineId = new Guid(ViewContext.RouteData.Values["id"].ToString()!)
        };
    }
    
    public TrainingWeekNumberEditViewModel GetWeekNumberEditViewModel(TrainingWeek trainingWeek)
    {
        return new TrainingWeekNumberEditViewModel()
        {
            TrainingWeekId = trainingWeek.Id,
            WorkoutRoutineId = new Guid(ViewContext.RouteData.Values["id"].ToString()!)
        };
    }
    
    public TrainingWeekDeloadEditViewModel GetIsDeloadEditViewModel(TrainingWeek trainingWeek)
    {
        return new TrainingWeekDeloadEditViewModel()
        {
            TrainingWeekId = trainingWeek.Id,
            WorkoutRoutineId = new Guid(ViewContext.RouteData.Values["id"].ToString()!),
            IsDeload = trainingWeek.IsDeload
        };
    }
}
